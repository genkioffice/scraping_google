c
url
ad_counts
c
get_category(url)
quit
without_list[0]
without_index[0]
title
without_name_list.find_index(title)
without_name_list[1]
without_name_list[title]
without_name_list
without_list
witout_list
withour_list
title
url = without_list[title]
url = with_list[title]
quit
c
path
c
path
c
path
c
path
c
path
c
path
c
error
c
error
errror
path
Nokogiri::HTML(open(path).read)
html_doc
quit
c
search_tag
quit
c
cc
c
search_tag
c
search_tag
c
category
a
c
check_value_from_string(category)
@genre
c
genre
p genre
check_value_from_string(category)
c
check_value_from_string(category)
a
c
category
c
tmp.search(".document-subtitle.category").attribute('href').value.split(/^(\/)store\/apps\/category\/(.+)/)[2]
tmp.search(".document-subtitle.category").attribute('href').value.split(/^(\/)store\/apps\/category\/(.+)/)
tmp.search(".document-subtitle.category").attribute('href').value.split(\^(\/)store\/apps\/category\/(.+)\)
tmp.search(".document-subtitle.category").attribute('href').value
tmp.search(".document-subtitle.category").attribute('href').value.split(\^/store/apps/category\)
tmp.search(".document-subtitle.category").attribute('href').value
tmp.search(".document-subtitle.category").attribute('href')
tmp.search(".document-subtitle.category")
tmp.xpath('a',class="document-subtitle")
tmp
c
tmp.xpath('span', itemprop="genre").children.inner_text
tmp.xpath('span', itemprop="genre").children.value
tmp.xpath('span', itemprop="genre").children
tmp.xpath('span', itemprop="genre")
tmp.xpath('//span')
tmp.attribute('span')
tmp.attribute
tmp
tmp.search('//span')
tmp
quit
quit()
c
url_list
c
url_list
c
url_list
quit
quit()
url_list
url_lsit
c
url_list
quit
quit()
c
p tmp[1]
c
tmp
c
path
c
list_with
path_with
the_url
the url
path
tmp
c
tmp[1].attribute('href').value
tmp[1].attribute('href')
tmp[1].attribute
tmp[1]
tmp
c
path = Addressable::URI.parse(path).normalize
path
path.normalize
path.class
type(path)
p path
path
Nokogiri::HTML(open(path).read)
path
c
url_list
list_with
c
path = Addressable::URI.parse(path)
c
url_list
c
scrape_search(search_tag)
search_tag
tmp
c
create_sets_url(list_with)
c
create_sets_url(list_with)
quit
create_sets_url(list_with)
c
create_sets_url(list_with)
create_sets_url(list_with
create_sets_url(list_with)
c
scrape_search(url)
c
cc
list_with
c
list_with = get_name_list("/Users/g_takahashi/data_science/scraping/scraping_google" + "/広告あり" + "/apps")
get_name_list(path_with)
get_name_list(a)
get_name_list()
path_with
list_with = get_name_list(path_with)
path_with = "/Users/g_takahashi/data_science/scraping/scraping_google" + "/広告あり" + "/apps"
get_name_list(path_with)
p list_with
list_with
c
scrape_search("https://play.google.com/store/search?q=%E3%81%8B%E3%82%93%E3%81%9F%E3%82%93%E3%83%9C%E3%82%A4%E3%82%B9%E3%83%AC%E3%82%B3%E3%83%BC%E3%83%80%E3%83%BC&c=apps").attribute('href').value
scrape_search("https://play.google.com/store/search?q=%E3%81%8B%E3%82%93%E3%81%9F%E3%82%93%E3%83%9C%E3%82%A4%E3%82%B9%E3%83%AC%E3%82%B3%E3%83%BC%E3%83%80%E3%83%BC&c=apps").attribute
scrape_search("https://play.google.com/store/search?q=%E3%81%8B%E3%82%93%E3%81%9F%E3%82%93%E3%83%9C%E3%82%A4%E3%82%B9%E3%83%AC%E3%82%B3%E3%83%BC%E3%83%80%E3%83%BC&c=apps")
scrape_search(https://play.google.com/store/search?q=%E3%81%8B%E3%82%93%E3%81%9F%E3%82%93%E3%83%9C%E3%82%A4%E3%82%B9%E3%83%AC%E3%82%B3%E3%83%BC%E3%83%80%E3%83%BC&c=apps)
c
urls.countc
urls.count
c
get_other_apps_url(dev_url)
count(urls)
urls = urls.uniq
urls
  end
    urls << tmp
    tmp = i.attribute('href').value
  for i in apps_arr do
  urls = []
apps_arr
apps_arr = Array.new(dev_page.search('a.card-click-target'))
tmp = dev_page.search('.card-click-target')
dev_page = Nokogiri::HTML(open(dev_url).read)
dev_page = Nokogiri::HTML(open(developper_url).read)
get_other_apps_url(dev_url)
c
get_other_apps_url(dev_url)
c
get_other_apps_url(dev_url)
dev_url
c
tmp[0].attribute('href').valuec
tmp[0].attribute('href').value
tmp[0].attribute('href')
tmp
tmp[0].attribute('href').value.split(/^(\/)store\/apps\/developer\?id=(.+)/)[2]
tmp[0].attribute('href').value.split(/^(\/)store\/apps\/developer\?id=(.+)/)[3]
tmp[0].attribute('href').value.match(/^(\/)tmp[0].attribute('href').value.split(/^(\/)store\/apps\/developer\?id=(.+)/)[3]store\/apps\/developer\?id=(.+)/)
tmp[0].attribute('href').value.match(/^(\/)store\/apps\/developer\?id=(.+)/)
tmp[0].attribute('href').value.split(/^(\/)store\/apps\/developer\?id=(.+)/)
tmp[0].attribute('href').
tmp[0].attribute('href').value.id
c
check_developper(url_with).id
check_developper(url_with)
